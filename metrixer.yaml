apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrixer
  labels:
    app: metrixer
  namespace: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metrixer
  template:
    metadata:
      labels:
        app: metrixer
      namespace: test
    spec:
      containers:
        - name: metrixer
          image: mmacphail/metrixer:1.0.0
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: MANAGEMENT_ENDPOINT_HEALTH_SHOW_COMPONENTS
              value: always
            - name: MANAGEMENT_ENDPOINT_HEALTH_GROUP_LIVENESS_INCLUDE
              value: livenessState,eventResource
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
            initialDelaySeconds: 5
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
            initialDelaySeconds: 5
            periodSeconds: 3
          lifecycle:
            preStop:
              exec:
                command: [ "sh", "-c", "sleep 10" ]
---
apiVersion: v1
kind: Service
metadata:
  name: metrixer-service
  namespace: test
spec:
  selector:
    app: metrixer
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: metrixer-ingress
  namespace: test
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: metrixer.cluster.local
      http:
        paths:
          - path: /?(.*)
            pathType: Prefix
            backend:
              service:
                name: metrixer-service
                port:
                  number: 80